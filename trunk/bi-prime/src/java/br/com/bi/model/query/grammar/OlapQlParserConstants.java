/* Generated By:JJTree&JavaCC: Do not edit this line. OlapQlParserConstants.java */
package br.com.bi.model.query.grammar;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface OlapQlParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int RELATIONAL_OPERATOR = 6;
  /** RegularExpression Id. */
  int NOT = 7;
  /** RegularExpression Id. */
  int AND = 8;
  /** RegularExpression Id. */
  int OR = 9;
  /** RegularExpression Id. */
  int DOT = 10;
  /** RegularExpression Id. */
  int PLUS = 11;
  /** RegularExpression Id. */
  int MINUS = 12;
  /** RegularExpression Id. */
  int MULT = 13;
  /** RegularExpression Id. */
  int DIV = 14;
  /** RegularExpression Id. */
  int LBRA = 15;
  /** RegularExpression Id. */
  int RBRA = 16;
  /** RegularExpression Id. */
  int COMMA = 17;
  /** RegularExpression Id. */
  int DATE = 18;
  /** RegularExpression Id. */
  int SELECT = 19;
  /** RegularExpression Id. */
  int ON = 20;
  /** RegularExpression Id. */
  int ROWS = 21;
  /** RegularExpression Id. */
  int COLUMNS = 22;
  /** RegularExpression Id. */
  int FROM = 23;
  /** RegularExpression Id. */
  int WHERE = 24;
  /** RegularExpression Id. */
  int METADATA_OBJECT_NAME = 25;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 26;
  /** RegularExpression Id. */
  int EXPONENT = 27;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 28;
  /** RegularExpression Id. */
  int STRING_LITERAL = 29;
  /** RegularExpression Id. */
  int CHAR = 30;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<RELATIONAL_OPERATOR>",
    "\"not\"",
    "\"and\"",
    "\"or\"",
    "\".\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "<DATE>",
    "\"select\"",
    "\"on\"",
    "\"rows\"",
    "\"columns\"",
    "\"from\"",
    "\"where\"",
    "<METADATA_OBJECT_NAME>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<INTEGER_LITERAL>",
    "<STRING_LITERAL>",
    "<CHAR>",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
  };

}
